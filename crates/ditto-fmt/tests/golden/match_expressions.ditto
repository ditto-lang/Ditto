module Match exports (..)


octopus =
    match arm with
    | Arm1 -> "octopus"
    | Arm2 ->  -- comment
        "octopus"
    | Arm3 ->
        -- comment
        "octopus"
    | Arm4 -> "octopus"  -- comment
    |  -- pls don't do this
     Arm5 -> "octopus"
    | Arm6  -- or this
     -> "octopus"
    --
    --
    --
    | Arm.Arm7 -> if true then "octopus" else "octopus"
    | Arm.Arm8 ->
        if true then
            -- still octopus
            "octopus"
        else
            "octopus"
    end

-- it's a classic
map_maybe = fn (f, maybe) ->
    -- it really is
    match maybe with
    | Just(a) -> f(a)
    | Nothing -> Nothing
    end

all_the_args = fn () ->
    match not_sure with
    | Foo(a, b, _c, d) -> unit
    | Bar(Foo(a, b), b, Baz.Barrr, _) -> unit
    | Foo(
        -- comment
        a,
        B.B,
        -- comment
        C.C(a, b, c),
        D.D(
            -- comment
            d,
        ),
    ) -> unit
    end

nested = fn () ->
    match x with
    | Outer0 ->
        match y with
        | Inner0 -> unit
        | Inner1 -> unit
        end
    | Outer1 -> unit
    end

multi_line_expr = fn () ->
    match
        x
        |> y
    with
    | z -> unit
    end
